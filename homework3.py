import random
__autor__ = 'Марченко Инесса'

# EASY
# Постарайтесь использовать то, что мы прошли на уроке при решении этого ДЗ,
# вспомните про zip(), map(), lambda, посмотрите где лучше с ними, а где они излишни!

# Задание - 1
# Создайте функцию, принимающую на вход Имя, возраст и город проживания человека
# Функция должна возвращать строку вида "Василий, 21 год(а), проживает в городе Москва"
def func_1(name, age, city):
    return "{}, {} год(а), проживает в городе {}".format(name, age, city)

name, age, city = input("Введите Имя: "), input("Введите возраст: "), input("Введите город проживания: ")
print ("Задача №1")
print(func_1(name.title(), age, city.title()))


# Задание - 2
# Создайте функцию, принимающую на вход 3 числа, и возвращающую наибольшее из них
def func_2(a, b, c):
    return max(a, b, c)

a, b, c = random.randint(-100,100), random.randint(-100,100), random.randint(-100,100)
print ('\nЗадача №2')
print("a = ", a)
print("b = ", b)
print("c = ", c)
print ("Самое большое число из трех: ", func_2(a, b, c))

# Задание - 3
# Создайте функцию, принимающую неограниченное количество строковых аргументов,
# верните самую длинную строку из полученных аргументов
print ('\nЗадача №3')
def func_3(*args):
    print("Все переданные строки:", args)
    max_len = 0
    str = ""
    for i in args:
        if len(i) > max_len:
            max_len = len(i)
            str = i
    return str

# генерация строк, чтобы не вводить
def create_rand_str():
    alph = "abcdefghijklmnopqrstuvwxyz"
    str_len = random.randint(5, 20)
    str = ""
    for j in range(str_len):
        str +=  random.choice(alph)
    return str

str_1 = create_rand_str()
str_2 = create_rand_str()
str_3 = create_rand_str()
str_4 = create_rand_str()

print("Самая длинная строка: ", func_3(str_1, str_2, str_3, str_4))

# MEDIUM
# Задание - 1
# Вам даны 2 списка одинаковой длины, в первом списке имена людей, во втором зарплаты,
# вам необходимо получить на выходе словарь, где ключ - имя, значение - зарплата.
# Запишите результаты в файл salary.txt так, чтобы на каждой строке было 2 столбца,
# столбцы разделяются пробелом, тире, пробелом. в первом имя, во втором зарплата, например: Vasya - 5000
# После чего прочитайте файл, выведите построчно имя и зарплату минус 13% (налоги ведь),
# Есть условие, не отображать людей получающих более зарплату 500000, как именно
#  выполнить условие решать вам, можете не писать в файл
# можете не выводить, подумайте какой способ будет наиболее правильным и оптимальным,
#  если скажем эти файлы потом придется передавать.
# Так же при выводе имя должно быть полностью в верхнем регистре!
# Подумайте вспоминая урок, как это можно сделать максимально кратко, используя возможности языка Python.

print ("Задача №1")
# Вам даны 2 списка одинаковой длины, в первом списке имена людей, во втором зарплаты,
list_1 = ["Вася", "Петя", "Катя", "Оля", "Коля", "Вика", "Володя"]
list_2 = [50, 40, 600000, 20, 500, 550000, 1000]

# вам необходимо получить на выходе словарь, где ключ - имя, значение - зарплата.
dict_1 = dict(zip(list_1,list_2))
print("Исходный список", dict_1)

# Есть условие, не отображать людей получающих более зарплату 500000
def del_func(x):
    if dict_1[x] > 500000:
        dict_1.pop(x)

filter_list = list(map(del_func, dict_1.copy()))
print("Отфильтрованный список", dict_1)


# Запишите результаты в файл salary.txt так, чтобы на каждой строке было 2 столбца,
# столбцы разделяются пробелом, тире, пробелом. в первом имя, во втором зарплата, например: Vasya - 5000
list_dict = list(map(lambda x: x + " - " + str(dict_1[x])+'\n',dict_1))
f = open('salary.txt', 'w', encoding='UTF-8')
f.writelines(list_dict)
f.close()

# После чего прочитайте файл, выведите построчно имя и зарплату минус 13% (налоги ведь)
# Так же при выводе имя должно быть полностью в верхнем регистре!
# "имя должно быть полностью в верхнем регистре" - я это понимаю что все буквы имени переводим в верхний регистр?..
def print_str(x):
    s = x.split()
    print ("{} - {}".format(s[0].upper(), int(s[2])*0.87))


print("Прочтненное из файла (имя полностью в верхнем регистре, зп - 13%):")
f = open('salary.txt', 'r', encoding='UTF-8')
read_file = list(map(print_str,f.readlines()))
f.close()